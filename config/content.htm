<h1>About</h1>
<p><a href="https://mde.tw/cadnote">https://mde.tw/cadnote</a></p>
<p>這是國立虎尾科技大學 (National Formosa University, Taiwan) 機械設計工程系大二電腦輔助設計與實習課堂筆記網站，本課程承接大一的計算機程式，並為隨後協同産品設計課程提供必要的零組件設計繪圖與 Web-based 機電系統模擬基礎。</p>
<p>課程內容將包含機電整合範例系統中 3D 零組件的電腦輔助設計繪圖，以及實體模型製作之前所需的機電控制系統設計與模擬。</p>
<p>電腦輔助設計繪圖將採用可在 Windows 操作系統中可㩦運作的 Siemens Solid Edge 與 Solvespace，業界普遍採用的 Dassault Solidworks 與 Siemens NX，以及能直接在 PC Web Browser 及手機或平板 App 中使用的 Onshape。</p>
<p>控制系統設計將採用最簡單的 PID 自動控制流程，並配合將 3D 零組件模型導入 Coppeliasim，以 Python ZeroMQ Remote API 程式跨網路進行控制後，再利用 Websocket 將機電系統控制與模擬結果，呈現於 PC 、平板或手機的 Web Browser 上，以便在之後的協同産品設計課程中進行應用。</p><h1>上課內容</h1>
<p>112 學年度第一學期 (2023 Fall) 機械設計工程系 - <span style="background-color: #ccffcc;">電腦輔助設計與實習</span>課程的上課內容與進度.</p>
<hr/>
<p>首先說明<a href="https://mde.tw/cadnote/content/%E8%AA%B2%E7%A8%8B%E8%A9%95%E5%88%86.html">課程評分方式</a></p>
<p>Teaching Methods (教學方法):</p>
<ol>
<li>lectures (講課)</li>
<li>instruction (導引)</li>
<li>projects (專案)</li>
<li>self-study (自學)</li>
</ol>
<p>第一階段任務:</p>
<p>手機建議安裝以下 Apps:</p>
<p style="padding-left: 30px;">ChatGPT, Github mobile, Replit, Authy, Teams, Onshape</p>
<p style="padding-left: 30px;">各 Apps 的功能與目的:</p>
<p style="padding-left: 60px;">本課程允許學員從 ChatGPT 以 GPT-3.5 preview 對話過程取出內容, 納入個人與作業網站中.</p>
<p style="padding-left: 60px;">手機上的 Github mobile App 可用於 Github 帳號中的 2FA 流程, 幫助 Github 阻絕不當的 robot 濫用.</p>
<p style="padding-left: 60px;">Replit App 則可讓學員利用手機 Run 倉儲網站, 並以手機或平板瀏覽器管理較少量的網站編輯.</p>
<p style="padding-left: 60px;">Authy App 允許使用者利用手機或數位手錶取得 2FA 登入流程所需的 verification code.</p>
<p style="padding-left: 60px;">Teams App 可以讓學員利用手機參與 Microsoft 線上團隊課程.</p>
<p style="padding-left: 60px;">Onshape App 則可讓使用者利用手機或平面檢視或修改協同產品設計流程中的零組件.</p>
<hr/>
<p>完成本節中的各項任務後, 表示你將可以登入:</p>
<ol>
<li>學校 email 帳號郵箱</li>
<li>個人Gmail 帳號郵箱</li>
<li>Replit IDE 系統 (以 個人Gmail 帳號登入)</li>
<li>個人 Github 系統</li>
<li>以學校 email 帳號設定的 Onedrive 系統</li>
</ol>
<h4><span style="background-color: #ffff99;">登入學校 Email 郵箱:</span></h4>
<p style="padding-left: 30px;">學校 Webmail: <a href="https://mail.nfu.edu.tw">https://mail.nfu.edu.tw</a> (帳號為: 學號@nfu.edu.tw, 用來通知 <a href="http://s1511.cycu.org">http://s1511.cycu.org</a>  主機上的帳號密碼與學期成績)</p>
<h4><span style="background-color: #ffff99;">申請或登入 Gmail:</span></h4>
<p style="padding-left: 30px;">假如尚未擁有 Gmail 帳號, 請自行<a href="https://accounts.google.com/SignUp">申請一個 Gmail 帳號</a>, 可用來<a href="https://replit.com/login">登入 Replit</a> 線上 IDE 系統.</p>
<p style="padding-left: 30px;">使用 Replit 免費帳號管理 Github 倉儲網站時, 必須確認 Replit 所屬伺服器是在開啟狀態, 最佳使用流程是在任一 Web-based 流程儲存網頁內容時, 先將內容複製到近端電腦 (即將欲存檔的頁面 html 暫存至電腦緩衝區), 之後再執行網際存檔, 以避免丟失資料 (Replit 免費帳號可能在使用者編輯網頁過程重新啟動伺服器).</p>
<h4><span style="background-color: #ffff99;">申請 Github 帳號:</span></h4>
<p style="padding-left: 30px;">已經有 Github 帳號者, 請以既有帳號登入, 並在 Github 全面要求使用 2FA (Two Factor Authentication) 之前, 完成設定.</p>
<p style="padding-left: 30px;">尚未擁有 Github 帳號者, 請利用"學號@nfu.edu.tw"在 Github <a href="https://github.com/join">註冊</a>一個帳號, 帳號名稱可以選擇<span style="background-color: #ccffcc;">學號</span>, 或者用<span style="background-color: #ccffcc;">英文姓名的三個字母縮寫加上學號</span>作為 Github 帳號. 帳號建立後必須進入 <a href="https://mail.nfu.edu.tw">https://mail.nfu.edu.tw</a> 回覆確認信件後, 才能開始使用 Github.</p>
<p style="padding-left: 30px;">設定 Github 帳號的 2FA 認證:</p>
<p style="padding-left: 60px;">由於 Github 要求所有用戶在 2023 年底之前要使用 2FA 認證方式登入, 使用者可以在手機中先安裝 Github Mobile App, 假如只希望利用手機取得 2FA token (六個阿拉伯數字) 則可以在手機中安裝 Google Authenticator App, 若也希望利用 Apple Watch 取得 2FA token, 則可以在手機中安裝 Authy App.</p>
<p style="padding-left: 60px;">將 Github 帳號登入所需的 2FA 認證設定於手機的 Google Authenticator 或 Authy 的流程為:</p>
<p style="padding-left: 90px;">1. 登入 Github 後, 進入帳號 Settings - Password and authentication - Two-factor authentication 下, 若此時手機已經安裝 Github Mobile App, 且以 Github 帳號登入, 則 Preferred 2FA methods 選項中將會顯示 Github Mobile, 表示此時啟動 2FA 認證流程, 則使用者登入 Github 時, 除了必須輸入帳號密碼外, 還需要在手機的 Github Mobile App 中確認同意該使用者登入 Github, 系統才會允許登入.</p>
<p style="padding-left: 90px;">2. 接下來, 在 Two-factor methods 下點選 Authenticator app 右方的 Add (若要變更手機所使用的 2FA token 產生程式, 則點選 Edit), 視窗中將會出現一組二維條碼, 使用者可以利用手機開啟 Google Authenticator 或 Authy 中的 account add 功能開啟相機拍二維條碼後, 將 Github 帳號登錄至手機認證套件中.</p>
<p style="padding-left: 90px;">3. 一旦上述 Github 帳號在手機中的 2FA 認證設定完成, 使用者可以將前述內建為 Github Mobile 的 Preferred 2FA methods 改為 Authenticator app, 之後再登入 Github, 除了必須輸入對應的帳號密碼之外, 還需要輸入在特定時段內輸入手機或手錶中對應帳號所顯示的六個數字 (即 2FA token), 才能登入 Github.</p>
<p style="padding-left: 90px;">4. 至於手機中的 Authenticator 也可以再利用 Pin 密碼、指紋或人臉辨識流程加入安全保護, 一旦手機或手錶毀損, 就可以藉以登入 Github 帳號修改設定.</p>
<p>Github 帳號在電腦輔助設計與實習課程中的用途:</p>
<ol>
<li>領取 <a href="https://classroom.github.com">Github Classroom</a> 系統所指定的作業</li>
<li>建立個人網站: <a href="https://github_帳號.github.io">https://github_帳號.github.io</a></li>
<li>將電腦輔助設計與實習課程中所編寫的程式與相關資料存入 Github 帳號下的 Gist</li>
</ol>
<p>在 Github 中, 若需要將所建立的倉儲以 Github Pages 功能轉為網站, 可以在建立倉儲時, 以 <a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 作為 template, 首先學習如何利用 Replit 維護網站內容, 隨後則可利用 s1511 伺服器中的帳號進行 Github 倉儲與網站內容的維護, 最後也可以在近端可攜程式環境中維護 Github 倉儲與網站內容.</p>
<p>利用 Github 建立個人網站 (透過 <a href="https://pages.github.com/">Github Pages</a>) 有以下目標:</p>
<ol>
<li>可在網站中自我介紹 (<a href="https://www.betterup.com/blog/how-to-introduce-yourself">https://www.betterup.com/blog/how-to-introduce-yourself</a>)</li>
<li>可在網站中展示並介紹自己寫過的程式</li>
<li>可在網站中簡介自己修過的課程內容</li>
<li>可在網站中說明自己曾經參與過的專題</li>
<li>可在網站中介紹自己未來的生涯規劃</li>
</ol>
<h4><span style="background-color: #ffff99;">申請 onedrive 帳號:</span></h4>
<ol>
<li>登入學校郵箱 (用來收帳號建立確認信)</li>
<li>尚未建立 @nfu 對應教育版帳號者, 請至 <a href="https://www.microsoft.com/zh-tw/education/products/office">https://www.microsoft.com/zh-tw/education/products/office</a>, 以 學號@nfu.edu.tw 帳號申請 OneDrive 帳號.</li>
</ol>
<p>onedrive 帳號在電腦輔助設計與實習課程中的用途:</p>
<ol>
<li>擁有線上 5TB 的儲存空間, 可用來儲存個人所建立的流程操作 mp4 影片, 並嵌入個人網頁或作業網站中</li>
<li>擁有線上 5TB 的儲存空間, 可用來儲存與課程相關的<a href="https://software.nfu.edu.tw/">教育版授權軟體</a> (例如: <a href="https://software.nfu.edu.tw/Windows/tw/Win_10_22H2.4_64BIT_Ch.ISO">Windows 10 64位元 22H2.4</a>, <a href="https://software.nfu.edu.tw/Windows/tw/Win_11_22H2.6_64BIT_Ch.ISO">Windows 11 64位元 22H2.6</a>, <a href="https://software.nfu.edu.tw/KMS/windows_kms.bat">windows_kms.bat</a>) 或可攜程式系統檔案與<a href="https://link.springer.com">電子書</a></li>
<li>登入後可參與電腦輔助設計與實習課程 Teams (CAD2023 MS Teams 代碼為: fnueb56)</li>
<li>登入後可下載電腦輔助設計與實習課程網站中的相關檔案 (下載連結將公布在 Teams)</li>
</ol>
<p>可攜程式環境:</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbxsXK5kkU1ImhJ_HcYPnTcB9MboGQcfs6FuojXRPlhInA?e=wzLQFt">basic_portable_python.7z</a> (下載 15MB, 解開後 55MB)</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EQTW-mq62DpFtw5It9ao-PIBPXW7z5z8oVsW5gd8zbDXOQ?e=q6gHgf">Portable_2023_fall_1.3g_5g.7z</a> (需要下載密碼)</p>
<p style="padding-left: 30px;">也可以直接使用電腦輔助設計室中 C:\Portable_2023_fall 目錄中的檔案</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVZctF66LE1BkQCL4mvFEGgB51yXmcukoLae6LflsrC_Og?e=2XrhTB">se_portable_X_for_cad2023.7z</a> (需要下載密碼)</p>
<p>電腦輔助設計套件:</p>
<p style="padding-left: 30px;">全雲端: <a href="https://www.onshape.com/en/">https://www.onshape.com/en/</a> (課程協同帳號: course At mde dot tw)</p>
<p style="padding-left: 30px;">AutoDesk (USA): Inventor and Fusion 360</p>
<p style="padding-left: 30px;">Dassault Systems (France): SolidWorks and CATIA</p>
<p style="padding-left: 30px;">Siemens (Germany): Solid Edge and NX</p>
<p style="padding-left: 30px;">PTC (USA): Creo and Onshape</p>
<p style="padding-left: 30px;">Solvespace: <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a>, <a href="https://solvespace.com/forum.pl">Forum</a></p>
<p>機電資模擬套件:</p>
<p style="padding-left: 30px;">CoppeliaSim: <a href="https://www.coppeliarobotics.com/">https://www.coppeliarobotics.com/</a>, <a href="https://github.com/CoppeliaRobotics">https://github.com/CoppeliaRobotics</a></p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a> (需要下載密碼)</p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>, <a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p>
<p style="padding-left: 30px;">Webots: <a href="https://cyberbotics.com/">https://cyberbotics.com/</a>, <a href="https://webots.cloud/">https://webots.cloud/</a></p>
<p>Robotics:</p>
<p style="padding-left: 30px;">RoboDK: <a href="https://robodk.com/">https://robodk.com/</a>, <a href="https://github.com/RoboDK/RoboDK-API/tree/master/Python/robodk">robodk</a> and <a href="https://github.com/RoboDK/RoboDK-API/tree/master/Python/robolink">robolink</a> (integrated into robodk), <a href="https://www.parallemic.org/RoKiSim.html">https://www.parallemic.org/RoKiSim.html</a> </p>
<p>References:</p>
<p style="padding-left: 30px;"><a href="http://wcm.cycu.org:88/github/">http://wcm.cycu.org:88/github/</a> (只能在機械設計系 IPv6 網段連結)</p><h2>任務一</h2>
<hr/>
<p>2023.09.14 上午 2b 上課時段, 之所以沒有 IPv6 網路連線的原因是: <span style="background-color: #ffff00;">BGA-0810-S 網管集線器的 port 24 硬體故障</span>, 無法從工作站室取得機械設計系網路主幹訊號.</p>
<p>在 Replit Python 環境中就是內建 Python3, 因此安裝模組必須使用 pip 而非一般 Linux 環境中使用的 pip3:</p>
<p>以 import 將倉儲從 github 導入後, 必須使用 git submodule update --init 取下 cmsimde 子模組內容 (因為 Replit import 不會自動取下倉儲對應的子模組).</p>
<p>取下子模組之後, 以 Run 嘗試以 Python3 執行 main.py, 讓 Replit 自行調適所需的 Python3 環境, 結果會顯示缺少啟動 cmsimde 網站的模組, 再以下列指令在 Shell 頁面安裝所需模組:</p>
<p style="padding-left: 30px;">pip install flask flask_cors bs4 lxml markdown pelican gevent</p>
<p>其中 flask 為 Python 網際框架, flask_cors 則允許跨網域擷取資料的 flask 延伸模組, bs4 與 lxml 用於超文件分頁, markdown 與 pelican 則允許使用者採 Markdown 格式編寫網誌內容, 並且利用 Pelican 套件轉為 html 格式的網誌文章. 至於 gevent 則是 Replit 內建使用的同步網路程式庫.</p>
<p>手動載下倉儲子模組, 試以 Run 執行之後再安裝 cmsimde 編輯網站所需模組, 應該就可以利用 Run 啟動倉儲對應的動態網站.</p>
<p>最後, 為了保全網站登入的管理者密碼編碼, 還需要在 Secrets 頁面中建立 config 變數, 並將近端 config/config 所修改的管理者密碼編碼登錄至 config 變數.</p>
<hr/>
<p>請自選 CAD 套件, 依照下列圖示, 以能將此系統放在電腦桌上作為參考尺寸, 繪製所需的零組件, 並將各零組件檔案與畫面上傳至個人的 Onedrive, 或以 Onshape 上的公開連結展示所完成的資料.</p>
<p>最後在個人的 帳號.github.io 網站上呈現任務一所完成的結果 (請以 H1 且標題為任務一建立網頁).</p>
<p>有關電腦輔助設計繪圖套件:</p>
<p style="padding-left: 30px;">機械設計工程系所提供的 SolidWorks 與 NX 都必須在啟動時, 透過網路至分別位於校本部與系上的認證主機進行登錄, 才能開啟. 其中 Siemens <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EdHAOThcQztGj4EZy5Duab0Bvcf3AbzsC_MLsCfmwBXAFg?e=4dPh6O">NX2027.3401_lite_cad2022.7z</a> (需要下載密碼) 可以放入隨身碟, 在任一台 Windows 64 位元的電腦上, 連接網路取得認證後開啟.</p>
<p style="padding-left: 30px;">Siemens Solid Edge 則提供 <a href="https://resources.sw.siemens.com/en-US/download-solid-edge-community-edition">Community 版本</a>, 安裝後無需上網即可使用, 在電腦輔助設計室則可以下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVZctF66LE1BkQCL4mvFEGgB51yXmcukoLae6LflsrC_Og?e=2XrhTB">se_portable_X_for_cad2023.7z</a> (需要下載密碼), 放入隨身碟後, 先執行所附的系統組態批次檔後, 直接以批次檔案開啟.</p>
<p style="padding-left: 30px;"><a href="https://solvespace.com">Solvespace</a> 則適合在初步設計階段, 提供尺寸規劃或外型較為簡單的零組件繪製.</p>
<p><img alt="" height="264" src="https://mde.tw/cadnote/images/electromagnetic_activated_cyclic_circulation_motion_system.gif" width="400"/></p>
<p>零組件繪圖完成後, 請轉為 STL 格式轉入 CoppeliaSim 進行機電系統模擬.</p>
<p>下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a> (需要下載密碼)</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>, <a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p><h3>磁力推動</h3>
<p>有關磁力推動的鋼球循環運動系統, 請參考<a href="https://youtu.be/r_LG8FDt51U?si=D6TZP_XarNUvVOye">這個影片</a>. <span style="color: #ffffff;">或者透過課程檔案下載密碼觀看<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcDmEvU3PKREq_noqkc_FeABZhbpfQ5p-f-3LuZn-PAQ1g?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=vF0sTa" style="color: #ffffff;">這個影片</a>.</span></p>
<p><span style="color: #000000;">同時參考 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ETvxcyDptUtMlUj22ato4RYBJc5ekzCuC1pGFcOmUSXK3w?e=2miuR4">A perpetual motion machine powered by electromagnetism.pdf</a> (需要下載密碼)</span></p>
<p>電腦輔助設計與實習課程的任務一即可根據此一裝置的設計, 先採用電腦輔助設計軟體繪製系統所需的 3D 零組件, 然後轉為 STL 格式, import 進入 CoppeliaSim, 接著根據影片說明, 利用近接感測器(例如: <a href="https://shopee.tw/%E9%9B%BB%E6%84%9F%E5%BC%8F-%E6%8E%A5%E8%BF%91%E9%96%8B%E9%97%9C-SN04N-SN04P-SN04Y-NPN-%E7%9B%B4%E6%B5%813%E7%B7%9A-%E5%9F%8B%E5%85%A5%E5%BC%8F-%E6%98%8E%E6%AD%A6%E6%A8%A1%E7%B5%84-i.795631261.18472134425">電感式近接開關</a>, <a href="https://www.amazon.com/-/en/LY346/dp/B07V4PR84Y">Inductive proximity sensor</a>) 控制電磁鐵開關, 設法透過磁力推動讓鋼球具有足夠動能返回圓形平台.</p>
<p>機電模擬系統:</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a> (需要下載密碼)</p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>, <a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p><h3>馬達推動</h3>
<p>除了利用磁力推動讓鋼球在軌道運動時能具備足夠動能返回圓形平台外, 另外一種設計是在鋼球 (或其他非鐵材質的圓球) 離開圓形平台孔洞之後, 設法利用隱藏式的馬達帶動機構, 以滾動方式加速圓球, 以便讓圓球返回平台.</p>
<p>有關馬達推動設計, 請參考: <a href="https://www.instructables.com/Marblevator-Perpetual/">https://www.instructables.com/Marblevator-Perpetual/</a> 或<a href="https://youtu.be/xVVpSp6_4iA?si=bpHoiIf-syLPORvT">這個影片</a>.</p>
<p>機電模擬系統:</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EfEaYO4E4eBGtTV3QBCP0f0B3JBfrw11LslWmQyqZB75fw?e=Zf7hCp">CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z</a> (需要下載密碼)</p>
<p style="padding-left: 30px;"><a href="https://www.coppeliarobotics.com/helpFiles/">CoppeliaSim 使用者手冊</a>, <a href="https://mde.tw/pjcopsim">CoppeliaSim 4.3.0 使用手冊網站</a></p><h2>Replit</h2>
<p>使用 Replit 維護 cmsimde 網站內容時, 可以利用 <a href="https://docs.replit.com/programming-ide/workspace-features/secrets">secrets 環境變數</a> Tool 保全免費 Replit 帳號 (只能建立完全公開的 Repls) 下的管理者密碼編碼字串.</p>
<hr/>
<p>Replit Documentation: <a href="https://docs.replit.com/">https://docs.replit.com/</a> </p>
<p><a href="https://docs.replit.com/getting-started/intro-replit">Intro to Replit</a></p>
<p>從 Github 將倉儲導入 Replit 的手冊: <a href="https://docs.replit.com/category/using-git-on-replit">https://docs.replit.com/category/using-git-on-replit</a> </p>
<hr/>
<p>利用 Replit 維護 Github 倉儲網站的步驟:</p>
<ol>
<li><a href="https://docs.replit.com/programming-ide/using-git-on-replit/connect-github-to-replit">Connect Github to Replit</a> (目的在讓導入 Replit 的倉儲具有推回 (git push) Github 對應帳號的權限)</li>
<li><a href="https://docs.replit.com/programming-ide/using-git-on-replit/import-repository">Import repository to Replit</a> (選擇倉儲所使用的程式 Python 語言, 可以直接在 Replit 執行網頁編輯程式)</li>
<li>手動取下與倉儲對應的子模組: git submodule update --init --recursive (假如連主倉儲內容與子模組全部手動取下資料, 則可使用 git clone --recurse-submodules 然後接 https 或 SSH 倉儲網址)</li>
<li><a href="https://docs.replit.com/programming-ide/using-git-on-replit/running-github-repositories-replit">Run Github repository on Replit</a> (由於從 Github 導入 Replit, 並沒有倉儲子模組的內容必須手動導入, 且以 pip 安裝執行 cmsimde 網頁編輯程式所需的模組, 其中包括 flask flask_cors bs4 lxml markdown pelican gevent 等)</li>
<li>以 Run 執行動態網站, 以編輯表單中的 config 設定管理者密碼後, 將 config/config 編碼字串移至 secrets 工具中的 config 變數, 然後刪除倉儲中的 config/config 檔案, 以 Stop 關閉動態網站後, 重新以 Run 執行動態網站, 測試是否可以採新修改的管理者密碼登入動態網站.</li>
<li>利用 cmsimde 動態網站功能修改內容後, 以 Convert 將資料轉為靜態網頁後, 回到 Replit 以 Git 工具進行內容的新增、提交與推送至對應的 Github 倉儲.</li>
</ol>
<hr/>
<p>2023.09.15 下午 2a 上課時所使用的 <a href="https://github.com/mdecycu/cmsite/tree/bda028e87bdf4e5764aedf67d5559c76c6178a0c">cmsite 版本</a>, 其中的 .replit 與 Replit.nix 必須移除才能使用最新版本的 Python, 因此若當時已經採用作為 Template 的倉儲必須進行修改或重新建立.</p>
<p>另外, 一個 Replit 免費帳號只能與一個 Github 帳號綁定. 以下說明將利用 scrum2 At mde dot tw 對應的 Gmail 登入 Replit 後, 其帳號設定為 scrum2, 並與 Github 帳號 scrum-2 進行綁定.</p>
<hr/>
<p>Repl 為 Replit 網際服務系統中的專案, 一旦選定對應 Language, 當專案以 Run 執行時, 系統將會試著安裝所需模組, 只是 Replit import from Github 並不會取下子模組, 使用者必須自行以 git 指令取得子模組內容.</p>
<p>Replit 專案的設定檔案位於 .replit 與 Replit.nix 等兩個檔案.</p>
<p>希望利用 Replit (Web-based IDE, Integrated Development Environment) 來維護個人網站.</p>
<p>將倉儲 Import 至 Replit, 在 Replit 啟動 cmsimde 網站進行內容編輯之後, 轉為靜態, git commit and git push.</p>
<p>導入畫面中選擇以 Python 作為專案程式語言, 如下圖所示, 導入 scrum-2/scrum-2.github.io 倉儲.</p>
<p><img alt="" class="add_border" height="226" src="/images/Replit_import_from_github.png" width="400"/></p>
<p>將 scrum-2.github.io 倉儲導入 Replit 之後, 必須手動取下倉儲對應的子模組 (因為 Replit 的 import 功能並不會自動將倉儲所屬的子模組導入).</p>
<p>在既有倉儲所處的電腦中導入子模組的指令為:</p>
<p style="padding-left: 30px;">git submodule update --init</p>
<p style="padding-left: 30px;">假如所要取下的倉儲子模組其下還有子模組, 則使用:</p>
<p style="padding-left: 60px;">git submodule update --init --recursive</p>
<p style="padding-left: 30px;">假如在 Windows 命令列或 Linux Shell 中直接利用 git clone 取下主倉儲與子模組資料, 則使用:</p>
<p style="padding-left: 60px;">git clone --recurse-submodules 然後接倉儲的 https 或 SSH 網址 (Github 已經從網站拿掉 SSH 協定語法). SSH 為 Secure SHell 的簡寫, 可在不安全的網路中為網路服務提供安全的傳輸環境.</p>
<p style="padding-left: 30px;">使用倉儲的 https 網址進行 git clone, 隨後若要改版後 git push, 則需在 .git/config 中納入權限 token. 若使用倉儲的 SSH 網址進行 git clone, 在 Windows 可以利用 Putty 建立權限對應 session (必要條件為 GIT_SSH 環境變數必須指向 putty\plink.exe), 其中包含連線網址 (也就是 github.com), 是否使用 Proxy server 設定 (因為牽涉 IPv4 與 IPv6 網路間的資料傳送), 以及 SSH 連線協定所使用的 private key 位置等. 若 SSH 協定 session 名稱為 my_session, 則利用 SSH 取下 Github 倉儲的指令為:</p>
<p style="padding-left: 60px;">git clone --recurse-submodules <a href="mailto:git@my_session:帳號/倉儲.git">git@my_session:帳號/倉儲.git</a></p>
<p style="padding-left: 30px;">此一指令代表是採用 SSH 協定, 以 git 作為帳號, 遠端登入到 github.com 伺服器後, 指定要取下 Github 系統中, 對應"帳號"下的"倉儲". 而進行此一指令之前, 必須將 my_session 對應 private key (若使用 Putty, 則格式為 .ppk) 的 public key 送到 "Github SSH and GPG keys" 設定區 (必須使用 OpenSSH 格式).</p>
<p>git submodule update 指令必須在 Replit 的 Shell tool 頁面中執行. 之後再以 pip install flask flask_cors bs4 lxml markdown pelican gevent 安裝所需模組.</p>
<p>當 .replit 中設定 run = "python3 main.py" 之後, 使用者就可以點擊 Run 按鈕執行 main.py</p>
<p></p><h2>近端可攜</h2>
<p>下載可攜程式套件:</p>
<p style="padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbxsXK5kkU1ImhJ_HcYPnTcB9MboGQcfs6FuojXRPlhInA?e=wzLQFt">basic_portable_python.7z</a> (下載 15MB, 解開後 55MB, 只有 CPython 官方基本的解譯系統)</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EQTW-mq62DpFtw5It9ao-PIBPXW7z5z8oVsW5gd8zbDXOQ?e=q6gHgf">Portable_2023_fall_1.3g_5g.7z</a> (維護 Github 倉儲與解譯 Python 程式用, 需要下載密碼)</p>
<p style="padding-left: 30px;">下載 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EQHpkbGf-iFAnvQpjr6YpvoBT5IGyhc7zkRFldLb9gzumQ?e=07fTJm">msys64_20230718_cmake.7z</a> (編譯 Solvespace 與 CoppeliaSim 用, 需要下載密碼)</p>
<p style="padding-left: 30px;">也可以直接使用電腦輔助設計室中 C:\Portable_2023_fall 目錄中的檔案</p>
<p>近端電腦、Replit、自架 Linux 伺服器與 Github 之間的關聯:</p>
<p style="padding-left: 30px;">近端電腦:</p>
<p style="padding-left: 60px;">啟動可攜程式系統執行 Python 程式, 編輯取自 Github 的動態與靜態網站內容</p>
<p style="padding-left: 60px;">可利用 CAD 套件的 API 延伸系統, 變更零組件的參數尺寸</p>
<p style="padding-left: 60px;">可操控 CoppeliaSim 模擬系統中的機電系統</p>
<p style="padding-left: 30px;">Replit:</p>
<p style="padding-left: 60px;">可執行 Python 程式, 編輯取自 Github 的動態與靜態網站內容</p>
<p style="padding-left: 30px;">自架 Linux 伺服器:</p>
<p style="padding-left: 60px;">可執行 Python 程式, 編輯取自 Github 的動態與靜態網站內容</p>
<p style="padding-left: 30px;">Github:</p>
<p style="padding-left: 60px;">利用倉儲建立個人網站與課程作業網站</p>
<p style="padding-left: 60px;">將程式碼與文字檔案儲存在個人帳號下的 Gist 區域</p>
<h3>Git</h3>
<p>Git 電子書:</p>
<p style="padding-left: 30px;"><a href="https://git-scm.com/book/en/v2">https://git-scm.com/book/en/v2</a></p>
<p style="padding-left: 30px;">簡體字版的 <a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git 教程</a></p>
<p style="padding-left: 30px;">整理下列資料:</p>
<p style="padding-left: 60px;"><a href="https://www.slideshare.net/maxma98/git-73699918">Git 基礎介紹</a></p>
<p style="padding-left: 60px;"><a href="https://zhuanlan.zhihu.com/p/34806399">Git 實用攻略</a></p>
<p style="padding-left: 60px;"><a href="https://ihower.tw/git/">Git 版本控制</a></p>
<p style="padding-left: 60px;"></p>
<p style="padding-left: 30px;"></p>
<p></p><h1>課程評分</h1>
<p>課程評分:</p>
<p style="padding-left: 30px;">線上測驗、期中網站與簡報、期末網站與簡報.</p>
<p>線上測驗:</p>
<p style="padding-left: 30px;">建立帳號後 (<span style="background-color: #ffff99;">請將密碼寫入手機的備忘錄</span>), 每週不定時進行.</p>
<p>期中網站評分與簡報:</p>
<p style="padding-left: 30px;">期中考前兩週開始進行.</p>
<p>期末網站評分與簡報:</p>
<p style="padding-left: 30px;">期末考前兩週開始進行.</p>
<p>期中成績計算:</p>
<p style="padding-left: 30px;">期中考與之前各週線上測驗成績平均</p>
<p>學期成績計算:</p>
<p style="padding-left: 30px;">(期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20%</p><h1>課程主題</h1>
<ol>
<li>設計繪圖</li>
<li>系統模擬</li>
<li>課程總結</li>
</ol>
<p>設計繪圖</p>
<p style="padding-left: 30px;">套件選擇與轉檔</p>
<p style="padding-left: 60px;">STL</p>
<p style="padding-left: 60px;">Part split</p>
<p style="padding-left: 30px;">SolidWorks</p>
<p style="padding-left: 30px;">Solid Edge (可攜)</p>
<p style="padding-left: 30px;">NX (可攜)</p>
<p style="padding-left: 30px;">Onshape (線上)</p>
<p style="padding-left: 30px;">Solvespace (可攜)</p>
<p>系統模擬</p>
<p style="padding-left: 30px;">控制系統設計與模擬</p>
<p style="padding-left: 60px;">PID 控制</p>
<p style="padding-left: 60px;">Coppeliasim</p>
<p style="padding-left: 90px;">Lua</p>
<p style="padding-left: 90px;">Python ZeroMQ remote API</p>
<p style="padding-left: 60px;">Webots</p>
<p style="padding-left: 90px;">VRML and X3D</p>
<p style="padding-left: 90px;">C++</p>
<p style="padding-left: 90px;">Python</p>
<p>課程總結流程</p>
<p style="padding-left: 30px;">mp4 簡報</p>
<p style="padding-left: 30px;">pdf 報告</p>
<h2>設計繪圖</h2>
<p>Loop the loop</p>
<p style="padding-left: 30px;">循環繞圈運動系統:</p>
<p style="padding-left: 60px;">設計一組機電模擬系統, 可以讓鋼球在以下圖示的圓盤孔洞落下後, 沿著軌道運動並回到圓盤上, 以進行重複循環繞圈運動.</p>
<p style="padding-left: 30px;"><img alt="" height="363" src="/images/perpetual_motion_machine_balancing_gadget.png" width="400"/></p>
<p>Ball balancing</p>
<p style="padding-left: 30px;">鋼球平衡台模擬系統:</p>
<p style="padding-left: 60px;">設計一組如下圖所示之機電整合模擬系統, 可以讓鋼球停在平台上使用者所指定的位置.</p>
<p style="padding-left: 30px;"><img alt="" height="179" src="/images/altair-acrome-ball-balancing-table.jpg" width="400"/></p>
<p style="padding-left: 30px;">(<a href="https://www.embeddedindia.com/ess-mechatronics-solutions.html">above image file source</a>) - <a href="https://altairengineering-my.sharepoint.com/personal/rahulp_asiapac_altair_com/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Frahulp%5Fasiapac%5Faltair%5Fcom%2FDocuments%2F220117%5FBBT%5FCourseware%2Ezip&amp;parent=%2Fpersonal%2Frahulp%5Fasiapac%5Faltair%5Fcom%2FDocuments&amp;ga=1">download courseware.zip</a> (or from <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXbXtcAT8aNHvbGuJibjuIIBrsAc-5uJqGEQMd3bMyM5_Q?e=Qpfn6R">@nfu onedrive</a>)</p>
<p>Virtual pinball</p>
<p style="padding-left: 30px;">虛實整合彈珠台機電系統:</p>
<p style="padding-left: 60px;">設計一組如下圖所示的虛實整合彈珠台, 使用實體按鈕 (電腦鍵盤按鈕或 Arduino based 硬體) 結合網際 Coppeliasim 模擬環境建立.</p>
<p style="padding-left: 30px;"><img alt="" height="417" src="/images/pinscape.png" width="400"/></p>
<p style="padding-left: 30px;">(<a href="http://mjrnet.org/pinscape/BuildGuideV2/BuildGuide.php">above image file source</a>)</p>
<h2>系統模擬</h2>
<p>Loop the loop</p>
<p style="padding-left: 30px;">循環繞圈運動系統:</p>
<p style="padding-left: 60px;">設計一組機電模擬系統, 可以讓鋼球在以下圖示的圓盤孔洞落下後, 沿著軌道運動並回到圓盤上, 以進行重複循環繞圈運動.</p>
<p style="padding-left: 30px;"><img alt="" height="363" src="/images/perpetual_motion_machine_balancing_gadget.png" width="400"/></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/electromagnetic_activated_cyclic_circulation_motion_system.gif" width="400"/></p>
<p style="padding-left: 30px;">(<a href="https://www.aliexpress.com/item/1005005596644942.html">file source</a>)</p>
<p style="padding-left: 30px;">References:</p>
<p style="padding-left: 60px;"><a href="https://physics.stackexchange.com/questions/708154/fake-perpetual-motion-device-using-an-electromagnet">https://physics.stackexchange.com/questions/708154/fake-perpetual-motion-device-using-an-electromagnet</a></p>
<p style="padding-left: 60px;"><a href="https://www.researchgate.net/publication/360529167_A_%27perpetual_motion_machine%27_powered_by_electromagnetism">https://www.researchgate.net/publication/360529167_A_%27perpetual_motion_machine%27_powered_by_electromagnetism</a></p>
<p style="padding-left: 60px;"><a href="https://physics.stackexchange.com/questions/188208/why-doesnt-this-magnetic-perpetual-motion-machine-work">https://physics.stackexchange.com/questions/188208/why-doesnt-this-magnetic-perpetual-motion-machine-work</a></p>
<p style="padding-left: 60px;"><a href="https://physics.stackexchange.com/questions/165453/tricky-conceptual-question-ball-sliding-and-rolling-down-incline">homework and exercises - Tricky conceptual question: ball sliding and rolling down incline - Physics Stack Exchange</a> </p>
<p style="padding-left: 60px;"><a href="https://physics.stackexchange.com/questions/728/will-a-ball-slide-down-a-lumpy-hill-over-the-same-path-it-rolls-down-the-hill">classical mechanics - Will a ball slide down a lumpy hill over the same path it rolls down the hill? - Physics Stack Exchange</a></p>
<p style="padding-left: 60px;"><a href="https://youtu.be/V70w3cxDJIM">https://youtu.be/V70w3cxDJIM</a></p>
<p style="padding-left: 60px;"><a href="https://youtu.be/KzUVJiyzQwg">https://youtu.be/KzUVJiyzQwg</a></p>
<p>Ball balancing</p>
<p style="padding-left: 30px;">鋼球平衡台模擬系統:</p>
<p style="padding-left: 60px;">設計一組如下圖所示之機電整合模擬系統, 可以讓鋼球停在平台上使用者所指定的位置.</p>
<p style="padding-left: 30px;"><img alt="" height="179" src="/images/altair-acrome-ball-balancing-table.jpg" width="400"/></p>
<p style="padding-left: 30px;">(<a href="https://www.embeddedindia.com/ess-mechatronics-solutions.html">above image file source</a>) - <a href="https://altairengineering-my.sharepoint.com/personal/rahulp_asiapac_altair_com/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Frahulp%5Fasiapac%5Faltair%5Fcom%2FDocuments%2F220117%5FBBT%5FCourseware%2Ezip&amp;parent=%2Fpersonal%2Frahulp%5Fasiapac%5Faltair%5Fcom%2FDocuments&amp;ga=1">download courseware.zip</a> (or from <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXbXtcAT8aNHvbGuJibjuIIBrsAc-5uJqGEQMd3bMyM5_Q?e=Qpfn6R">@nfu onedrive</a>)</p>
<p>後續協同應用: 虛實整合網際 Tilt Maze Game， <a href="https://craigpickard.com/tilt-2014">https://craigpickard.com/tilt-2014</a>，Tilt Maze App，<a href="https://youtube.com/shorts/HiWKgF6PBco">https://youtube.com/shorts/HiWKgF6PBco</a>，Reinforcement learning Tilt Maze platform system</p>
<p>Virtual pinball</p>
<p style="padding-left: 30px;">虛實整合彈珠台機電系統:</p>
<p style="padding-left: 60px;">設計一組如下圖所示的虛實整合彈珠台, 使用實體按鈕 (電腦鍵盤按鈕或 Arduino based 硬體) 結合網際 Coppeliasim 模擬環境建立.</p>
<p style="padding-left: 30px;"><img alt="" height="417" src="/images/pinscape.png" width="400"/></p>
<p style="padding-left: 30px;">(<a href="http://mjrnet.org/pinscape/BuildGuideV2/BuildGuide.php">above image file source</a>)</p>
<h2>課程總結</h2>
<p>3. 課程總結</p>
<p>錄製簡報影片</p>
<p style="padding-left: 30px;">mp4</p>
<p>編寫總結報告</p>
<p style="padding-left: 30px;">pdf</p>
<p>將課程摘要納入個人領英</p>
<p style="padding-left: 30px;"><a href="https://www.linkedin.com/">https://www.linkedin.com/</a></p>
<h1>QandA</h1>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>