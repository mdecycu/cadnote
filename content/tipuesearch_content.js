var tipuesearch = {"pages": [{'title': 'About', 'text': 'https://mde.tw/cadnote \n', 'tags': '', 'url': 'About.html'}, {'title': '課程評分', 'text': '課程評分: \n 線上測驗、期中網站與簡報、期末網站與簡報. \n 線上測驗: \n 建立帳號後 ( 請將密碼寫入手機的備忘錄 ), 每週不定時進行. \n 期中網站評分與簡報: \n 期中考前兩週開始進行. \n 期末網站評分與簡報: \n 期末考前兩週開始進行. \n 期中成績計算: \n 期中考與之前各週線上測驗成績平均 \n 學期成績計算: \n (期中成績與之後各週線上測驗成績平均)*60%+(期中網站與簡報成績)*20%+(期末網站與簡報成績)*20% \n', 'tags': '', 'url': '課程評分.html'}, {'title': '課程主題', 'text': '\n 設計繪圖 \n 系統模擬 \n 課程總結 \n \n 設計繪圖 \n 套件選擇與轉檔 \n STL \n Part split \n SolidWorks \n Solid Edge (可攜) \n NX (可攜) \n Onshape (線上) \n Solvespace (可攜) \n 系統模擬 \n 控制系統設計與模擬 \n PID 控制 \n Coppeliasim \n Lua \n Python ZeroMQ remote API \n Webots \n VRML and X3D \n C++ \n Python \n 課程總結流程 \n mp4 簡報 \n pdf 報告 \n', 'tags': '', 'url': '課程主題.html'}, {'title': '設計繪圖', 'text': 'Loop the loop \n 循環繞圈運動系統: \n 設計一組機電模擬系統, 可以讓鋼球在以下圖示的圓盤孔洞落下後, 沿著軌道運動並回到圓盤上, 以進行重複循環繞圈運動. \n \n Ball balancing \n 鋼球平衡台模擬系統: \n 設計一組如下圖所示之機電整合模擬系統, 可以讓鋼球停在平台上使用者所指定的位置. \n \n ( above image file source ) -  download courseware.zip  (or from  @nfu onedrive ) \n Virtual pinball \n 虛實整合彈珠台機電系統: \n 設計一組如下圖所示的虛實整合彈珠台, 使用實體按鈕 (電腦鍵盤按鈕或 Arduino based 硬體) 結合網際 Coppeliasim 模擬環境建立. \n \n ( above image file source )', 'tags': '', 'url': '設計繪圖.html'}, {'title': '系統模擬', 'text': 'Loop the loop \n 循環繞圈運動系統: \n 設計一組機電模擬系統, 可以讓鋼球在以下圖示的圓盤孔洞落下後, 沿著軌道運動並回到圓盤上, 以進行重複循環繞圈運動. \n \n \n ( file source ) \n References: \n https://physics.stackexchange.com/questions/708154/fake-perpetual-motion-device-using-an-electromagnet   \n https://www.researchgate.net/publication/360529167_A_%27perpetual_motion_machine%27_powered_by_electromagnetism   \n https://physics.stackexchange.com/questions/188208/why-doesnt-this-magnetic-perpetual-motion-machine-work   \n https://youtu.be/V70w3cxDJIM   \n https://youtu.be/KzUVJiyzQwg   \n Ball balancing \n 鋼球平衡台模擬系統: \n 設計一組如下圖所示之機電整合模擬系統, 可以讓鋼球停在平台上使用者所指定的位置. \n \n ( above image file source ) -  download courseware.zip  (or from  @nfu onedrive ) \n Virtual pinball \n 虛實整合彈珠台機電系統: \n 設計一組如下圖所示的虛實整合彈珠台, 使用實體按鈕 (電腦鍵盤按鈕或 Arduino based 硬體) 結合網際 Coppeliasim 模擬環境建立. \n \n ( above image file source )', 'tags': '', 'url': '系統模擬.html'}, {'title': '課程總結', 'text': '3. 課程總結 \n 錄製簡報影片 \n mp4 \n 編寫總結報告 \n pdf \n 將課程摘要納入個人領英 \n https://www.linkedin.com/ \n', 'tags': '', 'url': '課程總結.html'}, {'title': 'QandA', 'text': '\n', 'tags': '', 'url': 'QandA.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};